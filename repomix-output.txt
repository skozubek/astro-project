This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-01-08T20:30:48.038Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
public/
  favicon.svg
src/
  components/
    astro/
      Footer.astro
      Header.astro
    react/
      MobileNav.tsx
      ThemeToggle.tsx
  layouts/
    BaseLayout.astro
  pages/
    index.astro
  env.d.ts
.gitignore
astro.config.mjs
package.json
README.md
tailwind.config.mjs
tsconfig.json

================================================================
Files
================================================================

================
File: public/favicon.svg
================
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 128 128">
    <path d="M50.4 78.5a75.1 75.1 0 0 0-28.5 6.9l24.2-65.7c.7-2 1.9-3.2 3.4-3.2h29c1.5 0 2.7 1.2 3.4 3.2l24.2 65.7s-11.6-7-28.5-7L67 45.5c-.4-1.7-1.6-2.8-2.9-2.8-1.3 0-2.5 1.1-2.9 2.7L50.4 78.5Zm-1.1 28.2Zm-4.2-20.2c-2 6.6-.6 15.8 4.2 20.2a17.5 17.5 0 0 1 .2-.7 5.5 5.5 0 0 1 5.7-4.5c2.8.1 4.3 1.5 4.7 4.7.2 1.1.2 2.3.2 3.5v.4c0 2.7.7 5.2 2.2 7.4a13 13 0 0 0 5.7 4.9v-.3l-.2-.3c-1.8-5.6-.5-9.5 4.4-12.8l1.5-1a73 73 0 0 0 3.2-2.2 16 16 0 0 0 6.8-11.4c.3-2 .1-4-.6-6l-.8.6-1.6 1a37 37 0 0 1-22.4 2.7c-5-.7-9.7-2-13.2-6.2Z" />
    <style>
        path { fill: #000; }
        @media (prefers-color-scheme: dark) {
            path { fill: #FFF; }
        }
    </style>
</svg>

================
File: src/components/astro/Footer.astro
================
---
// src/components/astro/Footer.astro
import { Twitter, Linkedin, Github } from "lucide-react";

const currentYear = new Date().getFullYear();

const footerNavigation = {
  main: [
    { name: "Home", href: "/" },
    { name: "Services", href: "/services" },
    { name: "Blog", href: "/blog" },
    { name: "Resources", href: "/resources" },
    { name: "Book a Call", href: "/book" },
  ],
  services: [
    { name: "Web3 Basics", href: "/services/web3-basics" },
    { name: "NFT Deep Dive", href: "/services/nft-deep-dive" },
    { name: "Multi-Chain Mastery", href: "/services/multi-chain" },
  ],
  resources: [
    { name: "Blog", href: "/blog" },
    { name: "Newsletter", href: "/newsletter" },
    { name: "Case Studies", href: "/case-studies" },
  ],
  social: [
    {
      name: "Twitter",
      href: "https://twitter.com/web3yoda",
    },
    {
      name: "LinkedIn",
      href: "https://linkedin.com/in/web3yoda",
    },
    {
      name: "GitHub",
      href: "https://github.com/web3yoda",
    },
  ],
};
---

<footer class="bg-gray-50 dark:bg-gray-900" aria-labelledby="footer-heading">
  <h2 id="footer-heading" class="sr-only">Footer</h2>
  <div class="mx-auto max-w-7xl px-6 pb-12 pt-16 sm:pt-24 lg:px-8 lg:pt-32">
    <div class="xl:grid xl:grid-cols-3 xl:gap-8">
      <!-- Brand section -->
      <div class="space-y-8">
        <div class="flex items-center">
          <span class="text-3xl font-bold tracking-tight">Web3Yoda</span>
        </div>
        <p class="text-lg leading-relaxed text-gray-600 dark:text-gray-400">
          Bridging the gap between Web2 and Web3 through expert guidance and
          education.
        </p>
        <div class="flex space-x-8">
          <a
            href="https://twitter.com/web3yoda"
            class="text-gray-400 hover:text-gray-500"
          >
            <span class="sr-only">Twitter</span>
            <Twitter client:load className="h-8 w-8" aria-hidden="true" />
          </a>
          <a
            href="https://linkedin.com/in/web3yoda"
            class="text-gray-400 hover:text-gray-500"
          >
            <span class="sr-only">LinkedIn</span>
            <Linkedin client:load className="h-8 w-8" aria-hidden="true" />
          </a>
          <a
            href="https://github.com/web3yoda"
            class="text-gray-400 hover:text-gray-500"
          >
            <span class="sr-only">GitHub</span>
            <Github client:load className="h-8 w-8" aria-hidden="true" />
          </a>
        </div>
      </div>

      <!-- Navigation sections -->
      <div class="mt-16 grid grid-cols-2 gap-8 xl:col-span-2 xl:mt-0">
        <div class="md:grid md:grid-cols-2 md:gap-8">
          <div>
            <h3
              class="text-lg font-semibold leading-7 text-gray-900 dark:text-gray-100"
            >
              Services
            </h3>
            <ul role="list" class="mt-6 space-y-4">
              {
                footerNavigation.services.map((item) => (
                  <li>
                    <a
                      href={item.href}
                      class="text-base leading-7 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"
                    >
                      {item.name}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          <div class="mt-10 md:mt-0">
            <h3
              class="text-lg font-semibold leading-7 text-gray-900 dark:text-gray-100"
            >
              Resources
            </h3>
            <ul role="list" class="mt-6 space-y-4">
              {
                footerNavigation.resources.map((item) => (
                  <li>
                    <a
                      href={item.href}
                      class="text-base leading-7 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"
                    >
                      {item.name}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
        </div>
      </div>
    </div>

    <!-- Newsletter Section -->
    <div
      class="mt-16 border-t border-gray-900/10 dark:border-gray-100/10 pt-8 sm:mt-20 lg:mt-24"
    >
      <div class="lg:flex lg:items-center lg:justify-between">
        <div>
          <h3
            class="text-xl font-semibold leading-7 text-gray-900 dark:text-gray-100"
          >
            Subscribe to Web3 Insights Newsletter
          </h3>
          <p class="mt-2 text-lg leading-8 text-gray-600 dark:text-gray-400">
            Get the latest Web3 insights and updates delivered to your inbox.
          </p>
        </div>
        <form class="mt-6 sm:flex sm:max-w-md lg:mt-0">
          <label for="email-address" class="sr-only">Email address</label>
          <input
            type="email"
            name="email-address"
            id="email-address"
            autocomplete="email"
            required
            class="w-full min-w-0 appearance-none rounded-md border-0 bg-white dark:bg-gray-800 px-4 py-3 text-base text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-700 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 sm:w-72 sm:text-base sm:leading-6"
            placeholder="Enter your email"
          />
          <div class="mt-4 sm:ml-4 sm:mt-0 sm:flex-shrink-0">
            <button
              type="submit"
              class="flex w-full items-center justify-center rounded-md bg-purple-600 px-6 py-3 text-base font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
            >
              Subscribe
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Bottom section -->
    <div
      class="mt-8 border-t border-gray-900/10 dark:border-gray-100/10 pt-8 md:flex md:items-center md:justify-between"
    >
      <div class="flex space-x-8 md:order-2">
        {
          footerNavigation.main.map((item) => (
            <a
              href={item.href}
              class="text-base leading-7 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"
            >
              {item.name}
            </a>
          ))
        }
      </div>
      <p class="mt-8 text-sm leading-5 text-gray-500 md:order-1 md:mt-0">
        &copy; {currentYear} Web3Yoda. All rights reserved.
      </p>
    </div>
  </div>
</footer>

================
File: src/components/astro/Header.astro
================
---
// src/components/astro/Header.astro
import ThemeToggle from "../react/ThemeToggle";
import MobileNav from "../react/MobileNav";

const navItems = [
  { name: "Home", href: "/" },
  { name: "Services", href: "/services" },
  { name: "Blog", href: "/blog" },
  { name: "Resources", href: "/resources" },
];
---

<header
  class="w-screen sticky top-0 z-50 border-b border-gray-200 dark:border-gray-700 bg-white/90 dark:bg-gray-900/90 backdrop-blur"
>
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="flex h-20 items-center justify-between">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="text-3xl font-bold tracking-tight">Web3Yoda</a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-10">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class="text-lg font-medium text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white transition-colors"
            >
              {item.name}
            </a>
          ))
        }
      </nav>

      <!-- Right section -->
      <div class="flex items-center space-x-6">
        <ThemeToggle client:load />
        <a
          href="/book"
          class="hidden sm:inline-flex items-center justify-center rounded-md bg-purple-600 px-6 py-3 text-lg font-medium text-white hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors"
        >
          Book Call
        </a>
        <MobileNav client:load navItems={navItems} />
      </div>
    </div>
  </div>
</header>

================
File: src/components/react/MobileNav.tsx
================
// src/components/react/MobileNav.tsx
import React, { useState } from 'react';
import { Menu, X } from 'lucide-react';

interface NavItem {
  name: string;
  href: string;
}

interface MobileNavProps {
  navItems: NavItem[];
}

const MobileNav: React.FC<MobileNavProps> = ({ navItems }) => {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <div className="md:hidden">
      {/* Hamburger button */}
      <button
        type="button"
        className="inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-gray-900 hover:bg-gray-100 dark:text-gray-300 dark:hover:text-white dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-purple-500"
        onClick={() => setIsOpen(!isOpen)}
        aria-expanded={isOpen}
      >
        <span className="sr-only">Open main menu</span>
        {isOpen ? (
          <X className="block h-6 w-6" aria-hidden="true" />
        ) : (
          <Menu className="block h-6 w-6" aria-hidden="true" />
        )}
      </button>

      {/* Mobile menu panel */}
      <div
        className={`${
          isOpen ? 'translate-x-0' : 'translate-x-full'
        } fixed top-[5rem] right-0 bottom-0 w-full bg-white dark:bg-gray-900 z-40 transition-transform duration-300 ease-in-out transform`}
      >
        <div className="pt-2 pb-3 space-y-1 px-4">
          {navItems.map((item) => (
            <a
              key={item.name}
              href={item.href}
              className="block py-4 text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-300 dark:hover:text-white dark:hover:bg-gray-800 rounded-md"
              onClick={() => setIsOpen(false)}
            >
              {item.name}
            </a>
          ))}
        </div>
      </div>

      {/* Backdrop */}
      {isOpen && (
        <div
          className="fixed inset-0 bg-black bg-opacity-25 z-30"
          onClick={() => setIsOpen(false)}
        />
      )}
    </div>
  );
};

export default MobileNav;

================
File: src/components/react/ThemeToggle.tsx
================
// src/components/react/ThemeToggle.tsx

import { useEffect, useState } from 'react';
import { Moon, Sun } from 'lucide-react';

export default function ThemeToggle() {
  const [theme, setTheme] = useState(() => {
    if (typeof window !== 'undefined') {
      return localStorage.getItem('theme') || 'light'
    }
    return 'light'
  });

  useEffect(() => {
    if (theme === 'dark') {
      document.documentElement.classList.add('dark')
    } else {
      document.documentElement.classList.remove('dark')
    }
    localStorage.setItem('theme', theme)
  }, [theme]);

  return (
    <button
      onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}
      className="rounded-md p-2 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-purple-500"
      aria-label="Toggle theme"
    >
      {theme === 'dark' ? (
        <Sun className="h-5 w-5" />
      ) : (
        <Moon className="h-5 w-5" />
      )}
    </button>
  );
}

================
File: src/layouts/BaseLayout.astro
================
---
// src/layouts/BaseLayout.astro
import Footer from "../components/astro/Footer.astro";

interface Props {
  title: string;
  description?: string;
}

const {
  title,
  description = "Web3Yoda - Your trusted guide in the Web3 space",
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    <script is:inline>
      // Check for dark mode preference
      if (
        localStorage.getItem("theme") === "dark" ||
        (!localStorage.getItem("theme") &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100"
  >
    <div class="flex flex-col min-h-screen">
      <slot name="header" />
      <main class="flex-grow mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <slot />
      </main>
      <Footer />
    </div>
  </body>
</html>

================
File: src/pages/index.astro
================
---
// src/pages/index.astro
import BaseLayout from "../layouts/BaseLayout.astro";
import Header from "../components/astro/Header.astro";
import { Image } from "astro:assets";
import btcOrbit from "../assets/btcorbit.png";
import btcRunes from "../assets/btctechnologies.png";
import web3yoda from "../assets/web3yoda.png";

const services = [
  {
    title: "Web3 Basics",
    description:
      "Foundation course. All you need to start your transition into Web3.",
    duration: "60 min",
  },
  {
    title: "NFT & Digital Collectibles",
    description: "Deep dive into NFTs, digital collectibles, marketplaces.",
    duration: "60 min",
  },
  {
    title: "Multi-Chain Mastery",
    description:
      "Advanced guidance on navigating multiple blockchain ecosystems.",
    duration: "60 min",
  },
];
---

<BaseLayout title="Web3Yoda - Your Trusted Web3 Guide">
  <Header slot="header" />

  <!-- Hero Section with oversized text and diagonal layout -->
  <section class="relative overflow-hidden">
    <div
      class="absolute inset-0 bg-gradient-to-br from-purple-50 to-white dark:from-gray-900 dark:to-gray-800 -skew-y-6 origin-top-left transform-gpu"
    >
    </div>

    <!-- image - hidden on mobile, visible from md up -->
    <div
      class="absolute top-0 right-0 w-[530px] h-[530px] opacity-60 dark:opacity-80 hidden md:block"
    >
      <Image
        src={web3yoda}
        alt="Web3 Yoda"
        class="w-full h-full object-contain"
        width={530}
        height={530}
      />
    </div>

    <div class="relative max-w-[90rem] mx-auto px-4 pt-32 pb-48">
      <div class="max-w-[85%] mx-auto">
        <style>
          @keyframes gradient {
            0% {
              background-position: 0% 50%;
            }
            50% {
              background-position: 100% 50%;
            }
            100% {
              background-position: 0% 50%;
            }
          }

          @keyframes float {
            0% {
              transform: translateY(0px);
            }
            50% {
              transform: translateY(-10px);
            }
            100% {
              transform: translateY(0px);
            }
          }

          .gradient-text {
            background: linear-gradient(
              270deg,
              #9333ea,
              #6366f1,
              #8b5cf6,
              #a855f7,
              #6366f1,
              #9333ea
            );
            background-size: 400% 400%;
            animation: gradient 6s ease infinite;
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
          }

          .float-animation {
            animation: float 6s ease-in-out infinite;
          }
        </style>
        <div class="relative float-animation">
          <h1
            class="gradient-text text-6xl sm:text-8xl md:text-[10rem] font-bold tracking-tight leading-none mb-8"
          >
            Web3<br />Yoda
          </h1>
          <div
            class="absolute -inset-1 blur-3xl bg-gradient-to-r from-purple-600/30 to-indigo-600/30 -z-10"
          >
          </div>
        </div>
        <p
          class="text-xl sm:text-2xl md:text-4xl text-gray-600 dark:text-gray-300 max-w-3xl mt-12"
        >
          Start your Web3 journey with a seasoned guide who's walked the path
          before you.
        </p>
        <div class="mt-12 flex flex-wrap gap-6">
          <a
            href="/book"
            class="group relative px-8 py-4 text-xl font-semibold"
          >
            <span
              class="absolute inset-0 w-full h-full transition duration-200 ease-out transform translate-x-1 translate-y-1 bg-purple-700 group-hover:-translate-x-0 group-hover:-translate-y-0"
            ></span>
            <span
              class="absolute inset-0 w-full h-full bg-white dark:bg-gray-900 border-2 border-purple-700 group-hover:bg-purple-700"
            ></span>
            <span class="relative text-purple-700 group-hover:text-white"
              >Book Discovery Call</span
            >
          </a>
          <a
            href="/resources"
            class="relative px-8 py-4 text-xl font-semibold text-gray-700 dark:text-gray-300 hover:text-purple-700 dark:hover:text-purple-400 transition-colors"
          >
            Explore Resources →
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Services Section with Staggered Layout -->
  <section class="pt-4 pb-32 py-relative overflow-hidden">
    <div class="max-w-7xl mx-auto px-4">
      <h2 class="text-4xl md:text-7xl font-bold mb-24 text-center">
        Your Web3<br />
        <span class="text-purple-600">Onboarding guide</span>
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {
          services.map((service, index) => (
            <div
              class={`transform ${index % 2 === 1 ? "md:translate-y-16" : ""}`}
            >
              <div class="group relative">
                <div class="absolute -inset-1 rounded-lg bg-gradient-to-r from-purple-600 to-indigo-600 opacity-25 group-hover:opacity-100 transition-opacity blur" />
                <div class="relative bg-white dark:bg-gray-800 rounded-lg p-8 transform transition-transform group-hover:-translate-y-2">
                  <h3 class="text-2xl font-semibold mb-4">{service.title}</h3>
                  <p class="text-gray-600 dark:text-gray-400 mb-6">
                    {service.description}
                  </p>
                  <div class="flex items-center justify-between">
                    <span class="text-sm text-purple-600">
                      {service.duration}
                    </span>
                    <a
                      href="/book"
                      class="text-purple-600 hover:text-purple-700 font-medium group-hover:underline"
                    >
                      Book Now →
                    </a>
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Why Choose Section with Asymmetrical Layout -->
  <section class="py-32 relative overflow-hidden">
    <div
      class="absolute inset-0 bg-gradient-to-tl from-purple-50 to-white dark:from-gray-900 dark:to-gray-800 skew-y-3 origin-bottom-right transform-gpu"
    >
    </div>

    <div
      class="absolute inset-y-0 right-0 hidden md:flex items-center pointer-events-none"
    >
      <img
        src={btcRunes.src}
        alt="BTC Runes Symbol Background"
        class="w-[90%] h-[90%] object-contain opacity-10 dark:opacity-20"
      />
    </div>

    <div class="relative max-w-7xl mx-auto px-4">
      <div class="lg:max-w-3xl">
        <h2 class="text-4xl md:text-6xl font-bold mb-8 relative">
          Why Choose<br />
          <span class="text-purple-600">Web3Yoda?</span>
        </h2>
        <p class="text-xl text-gray-600 dark:text-gray-400 mb-12 max-w-xl">
          Skip the theory and dive into practical Web3 knowledge from someone
          who lives and breathes it daily.
        </p>
        <div class="space-y-8">
          <div
            class="group flex items-start gap-6 p-6 rounded-xl transition-all duration-300 hover:bg-white/50 dark:hover:bg-gray-800/50 hover:shadow-xl"
          >
            <div
              class="w-12 h-12 rounded-lg bg-purple-600 text-white flex items-center justify-center text-2xl font-bold shrink-0 group-hover:scale-110 transition-transform"
            >
              1
            </div>
            <div>
              <h3 class="text-xl font-semibold mb-2">
                Battle-Tested Web Veteran
              </h3>
              <p class="text-gray-600 dark:text-gray-400">
                Ex-Googler (SQE team), Web2 brand founder, with hands-on
                experience navigating the evolving web3 landscape.
              </p>
            </div>
          </div>
          <div
            class="group flex items-start gap-6 p-6 rounded-xl transition-all duration-300 hover:bg-white/50 dark:hover:bg-gray-800/50 hover:shadow-xl"
          >
            <div
              class="w-12 h-12 rounded-lg bg-purple-600 text-white flex items-center justify-center text-2xl font-bold shrink-0 group-hover:scale-110 transition-transform"
            >
              2
            </div>
            <div>
              <h3 class="text-xl font-semibold mb-2">Real-World Experience</h3>
              <p class="text-gray-600 dark:text-gray-400">
                Daily practitioner actively trading crypto perps, NFTs,
                ordinals, memecoins & runes. I don't just teach it, I live it.
              </p>
            </div>
          </div>
          <div
            class="group flex items-start gap-6 p-6 rounded-xl transition-all duration-300 hover:bg-white/50 dark:hover:bg-gray-800/50 hover:shadow-xl"
          >
            <div
              class="w-12 h-12 rounded-lg bg-purple-600 text-white flex items-center justify-center text-2xl font-bold shrink-0 group-hover:scale-110 transition-transform"
            >
              3
            </div>
            <div>
              <h3 class="text-xl font-semibold mb-2">Focused Mastery Path</h3>
              <p class="text-gray-600 dark:text-gray-400">
                Tailored guidance focusing on exactly what you need to master -
                no fluff, just practical Web3 skills
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section with Dynamic Background -->
  <section class="py-32 mt-16 relative overflow-hidden">
    <div class="absolute inset-0">
      <div
        class="absolute inset-0 bg-gradient-to-r from-purple-600 to-indigo-600 opacity-90"
      >
      </div>
      <div
        class="absolute inset-0 bg-[radial-gradient(circle_at_30%_50%,rgba(255,255,255,0.2)_0%,rgba(0,0,0,0.2)_100%)]"
      >
      </div>
    </div>
    <div class="relative max-w-7xl mx-auto px-4 text-center">
      <h2 class="text-4xl md:text-6xl font-bold text-white mb-8">
        Ready to Start Your<br />Web3 Journey?
      </h2>
      <p class="text-xl text-purple-100 mb-12 max-w-2xl mx-auto">
        Book a free 15-minute discovery call to discuss your goals and how I can
        help you achieve them.
      </p>
      <a
        href="/book"
        class="group relative inline-flex px-8 py-4 text-xl font-semibold"
      >
        <span
          class="absolute inset-0 w-full h-full transition duration-200 ease-out transform translate-x-1 translate-y-1 bg-purple-700 group-hover:-translate-x-0 group-hover:-translate-y-0"
        ></span>
        <span
          class="absolute inset-0 w-full h-full bg-white border-2 border-purple-700 group-hover:bg-purple-700"
        ></span>
        <span class="relative text-purple-700 group-hover:text-white"
          >Schedule Your Free Call →</span
        >
      </a>
    </div>
  </section>
</BaseLayout>

================
File: src/env.d.ts
================
/// <reference path="../.astro/types.d.ts" />

================
File: .gitignore
================
# build output
dist/
# generated types
.astro/

# dependencies
node_modules/

# logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*


# environment variables
.env
.env.production

# macOS-specific files
.DS_Store

# jetbrains setting folder
.idea/
repopack-output.txt

================
File: astro.config.mjs
================
import { defineConfig } from 'astro/config';
import react from '@astrojs/react';
import tailwind from '@astrojs/tailwind';

export default defineConfig({
  integrations: [react(), tailwind()],
  image: {
    // New image service configuration
    service: {
      entrypoint: 'astro/assets/services/sharp',
      config: {
        limitInputPixels: 0,
        limitOutputPixels: 0,
        maximum: 30000,
      }
    }
  }
});

================
File: package.json
================
{
  "name": "web3yoda",
  "type": "module",
  "version": "0.0.1",
  "scripts": {
    "dev": "astro dev",
    "start": "astro dev",
    "build": "astro check && astro build",
    "preview": "astro preview",
    "astro": "astro"
  },
  "dependencies": {
    "@astrojs/check": "^0.9.4",
    "@astrojs/react": "^4.1.2",
    "@astrojs/tailwind": "^5.1.4",
    "@types/react": "^18.3.12",
    "@types/react-dom": "^18.3.1",
    "astro": "^5.1.3",
    "lucide-react": "^0.453.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "tailwindcss": "^3.4.14",
    "typescript": "^5.6.3"
  },
  "devDependencies": {
    "@tailwindcss/typography": "^0.5.15"
  }
}

================
File: README.md
================
# Astro Starter Kit: Minimal

```sh
npm create astro@latest -- --template minimal
```

[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://stackblitz.com/github/withastro/astro/tree/latest/examples/minimal)
[![Open with CodeSandbox](https://assets.codesandbox.io/github/button-edit-lime.svg)](https://codesandbox.io/p/sandbox/github/withastro/astro/tree/latest/examples/minimal)
[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/withastro/astro?devcontainer_path=.devcontainer/minimal/devcontainer.json)

> 🧑‍🚀 **Seasoned astronaut?** Delete this file. Have fun!

## 🚀 Project Structure

Inside of your Astro project, you'll see the following folders and files:

```text
/
├── public/
├── src/
│   └── pages/
│       └── index.astro
└── package.json
```

Astro looks for `.astro` or `.md` files in the `src/pages/` directory. Each page is exposed as a route based on its file name.

There's nothing special about `src/components/`, but that's where we like to put any Astro/React/Vue/Svelte/Preact components.

Any static assets, like images, can be placed in the `public/` directory.

## 🧞 Commands

All commands are run from the root of the project, from a terminal:

| Command                   | Action                                           |
| :------------------------ | :----------------------------------------------- |
| `npm install`             | Installs dependencies                            |
| `npm run dev`             | Starts local dev server at `localhost:4321`      |
| `npm run build`           | Build your production site to `./dist/`          |
| `npm run preview`         | Preview your build locally, before deploying     |
| `npm run astro ...`       | Run CLI commands like `astro add`, `astro check` |
| `npm run astro -- --help` | Get help using the Astro CLI                     |

## 👀 Want to learn more?

Feel free to check [our documentation](https://docs.astro.build) or jump into our [Discord server](https://astro.build/chat).

================
File: tailwind.config.mjs
================
// tailwind.config.mjs
/** @type {import('tailwindcss').Config} */
export default {
	content: ['./src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}'],
	darkMode: 'class',
	theme: {
	  extend: {
		fontFamily: {
		  sans: ['Figtree', 'system-ui', 'sans-serif'],
		  display: ['Figtree', 'system-ui', 'sans-serif'],
		},
		colors: {
		  purple: {
			50: '#f5f3ff',
			100: '#ede9fe',
			200: '#ddd6fe',
			300: '#c4b5fd',
			400: '#a78bfa',
			500: '#8b5cf6',
			600: '#7c3aed',
			700: '#6d28d9',
			800: '#5b21b6',
			900: '#4c1d95',
		  },
		  gray: {
			50: '#f9fafb',
			100: '#f3f4f6',
			200: '#e5e7eb',
			300: '#d1d5db',
			400: '#9ca3af',
			500: '#6b7280',
			600: '#4b5563',
			700: '#374151',
			800: '#1f2937',
			900: '#111827',
		  },
		},
		typography: (theme) => ({
		  DEFAULT: {
			css: {
			  'color': theme('colors.gray.700'),
			  'a': {
				'color': theme('colors.purple.600'),
				'&:hover': {
				  color: theme('colors.purple.700'),
				},
			  },
			  'h1, h2, h3, h4': {
				'font-weight': '600',
				'color': theme('colors.gray.900'),
			  },
			},
		  },
		  dark: {
			css: {
			  'color': theme('colors.gray.300'),
			  'a': {
				'color': theme('colors.purple.400'),
				'&:hover': {
				  color: theme('colors.purple.300'),
				},
			  },
			  'h1, h2, h3, h4': {
				'color': theme('colors.gray.100'),
			  },
			},
		  },
		}),
		animation: {
		  'fade-in': 'fade-in 0.5s linear forwards',
		  'fade-in-up': 'fade-in-up 0.5s ease-out forwards',
		},
		keyframes: {
		  'fade-in': {
			'0%': {
			  opacity: '0',
			},
			'100%': {
			  opacity: '1',
			},
		  },
		  'fade-in-up': {
			'0%': {
			  opacity: '0',
			  transform: 'translateY(10px)',
			},
			'100%': {
			  opacity: '1',
			  transform: 'translateY(0)',
			},
		  },
		},
	  },
	},
	plugins: [
	  require('@tailwindcss/typography'),
	],
  }

================
File: tsconfig.json
================
{
  "extends": "astro/tsconfigs/strict",
  "compilerOptions": {
    "jsx": "react-jsx",
    "jsxImportSource": "react",
    "baseUrl": ".",
    "paths": {
      "@/*": [
        "src/*"
      ]
    }
  }
}
