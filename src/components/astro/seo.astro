---
// src/components/astro/SEO.astro
interface Props {
  title: string;
  description: string;
  image?: string;
  canonicalUrl?: string;
  type?: string;
  currentLocale: string;
  alternateUrls: {
    [key: string]: string;
  };
  schema?: Record<string, any>; // Allow custom schema override
  meta?: Array<{ name: string; content: string }>; // Additional meta tags
  robots?: string; // Custom robots directive
}

const {
  title,
  description,
  image = "/default-og.png",
  canonicalUrl,
  type = "website",
  currentLocale,
  alternateUrls,
  schema,
  meta = [],
  robots = "index, follow",
} = Astro.props;

// Get the current URL and use it as is for canonical (no trailing slash manipulation)
const currentUrl = Astro.url.href;

// Ensure canonical URL has language prefix but preserve exact path format
let finalCanonicalUrl = canonicalUrl || currentUrl;
if (!finalCanonicalUrl.includes(`/${currentLocale}/`)) {
  const urlObj = new URL(finalCanonicalUrl);
  const pathWithoutLocale = urlObj.pathname
    .replace(/^\/[^/]+\/?/, "")
    .replace(/\/$/, ""); // Remove trailing slash
  urlObj.pathname = `/${currentLocale}${pathWithoutLocale ? `/${pathWithoutLocale}` : ""}`;
  finalCanonicalUrl = urlObj.toString();
}

// Default schema if none provided
const defaultSchema = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  url: currentUrl,
  name: title,
  description: description,
  inLanguage: currentLocale,
  alternateName: Object.values(alternateUrls),
};

// Merge default schema with provided schema or use default
const finalSchema = schema
  ? { "@context": "https://schema.org", ...schema }
  : defaultSchema;
---

<!-- Basic Meta Tags -->
<title>{title}</title>
<meta name="description" content={description} />
<meta name="robots" content={robots} />
<link rel="canonical" href={finalCanonicalUrl} />

<!-- Custom Meta Tags -->
{meta.map((tag) => <meta name={tag.name} content={tag.content} />)}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={currentUrl} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:locale" content={currentLocale} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={currentUrl} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Language Alternates -->
<link rel="alternate" href={alternateUrls["x-default"]} hreflang="x-default" />
{
  Object.entries(alternateUrls)
    .filter(([lang]) => lang !== "x-default")
    .map(([lang, url]) => <link rel="alternate" href={url} hreflang={lang} />)
}

<!-- JSON-LD Schema -->
<script type="application/ld+json" set:html={JSON.stringify(finalSchema)} />
