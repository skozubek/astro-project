---
// src/components/tools/ToolMetrics.astro
import type { XMetrics } from "@/content/config";
import { useTranslations } from "@/i18n/utils";
import type { SupportedLanguages } from "@/i18n/i18n-config";

interface Props {
  metrics: XMetrics;
  lang: SupportedLanguages;
}

const { metrics, lang } = Astro.props;
const t = await useTranslations(lang);

// Ensure metrics exist
if (!metrics) return null;

const { followers, monthlyStats } = metrics;

const formatNumber = (num: number): string => {
  if (num >= 1000000) return `${(num / 1000000).toFixed(1)}M`;
  if (num >= 1000) return `${(num / 1000).toFixed(1)}K`;
  return num.toString();
};
---

<div class="flex items-center gap-6 mt-4 text-gray-400">
  <h2 class="text-lg font-bold">{t("tools.metrics.sectionTitle")}</h2>

  <div
    class="flex items-center gap-2 hover:text-blue-400 transition-colors"
    title={t("tools.metrics.followers")}
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path d="M17 21v-2a4 4 0 0 0-4-4H7a4 4 0 0 0-4 4v2"></path>
      <circle cx="9" cy="7" r="4"></circle>
      <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
      <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
    </svg>
    <span class="text-sm font-medium">{followers}</span>
  </div>

  <div
    class="flex items-center gap-2 hover:text-blue-400 transition-colors"
    title={t("tools.metrics.monthly.engagement")}
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path
        d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"
      ></path>
    </svg>
    <span class="text-sm font-medium">{monthlyStats.avgLikes}</span>
  </div>

  <div
    class="flex items-center gap-2 hover:text-green-500 transition-colors"
    title={t("tools.metrics.monthly.engagement")}
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path d="M17 1l4 4-4 4"></path>
      <path d="M3 11V9a4 4 0 0 1 4-4h14"></path>
      <path d="M7 23l-4-4 4-4"></path>
      <path d="M21 13v2a4 4 0 0 1-4 4H3"></path>
    </svg>
    <span class="text-sm font-medium">{monthlyStats.avgRetweets}</span>
  </div>
  {
    monthlyStats.followersGrowth > 0 && (
      <div
        class="flex items-center gap-2 text-green-400"
        title={t("tools.metrics.monthly.growth")}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path d="m18 15 3-3-3-3" />
          <path d="M3 12h18" />
        </svg>
        <span class="text-sm font-medium">
          +{monthlyStats.followersGrowth}%
        </span>
      </div>
    )
  }
</div>
